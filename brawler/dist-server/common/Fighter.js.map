{"version":3,"sources":["../../src/common/Fighter.js"],"names":["Fighter","gameEngine","Renderer","getInstance","addFighter","removeFighter","other","isDino","fighterType","direction","action","progress","kills","Object","assign","type","BaseTypes","TYPES","INT8","DynamicObject"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,O;;;;;;;;;;;;;iCAmBJC,U,EAAY;AACrB,UAAIC,iBAAJ,EACIA,kBAASC,WAAT,GAAuBC,UAAvB,CAAkC,IAAlC;AACP;;;sCAEiBH,U,EAAY;AAC1B,UAAIC,iBAAJ,EACIA,kBAASC,WAAT,GAAuBE,aAAvB,CAAqC,IAArC;AACP,K,CAED;;;;iCACaC,K,EAAO;AAChB,aAAO,EAAE,KAAKC,MAAL,IAAeD,KAAK,CAACC,MAAvB,CAAP;AACH;;;+BAEU;AACP,UAAMC,WAAW,GAAG,KAAKD,MAAL,GAAY,MAAZ,GAAmB,SAAvC;AACA,uBAAUC,WAAV,4GAAwD,KAAKC,SAA7D,qBAAiF,KAAKC,MAAtF,uBAAyG,KAAKC,QAA9G;AACH;;;2BAEML,K,EAAO;AACV,0EAAaA,KAAb;;AACA,WAAKG,SAAL,GAAiBH,KAAK,CAACG,SAAvB;AACA,WAAKC,MAAL,GAAcJ,KAAK,CAACI,MAApB;AACA,WAAKC,QAAL,GAAgBL,KAAK,CAACK,QAAtB;AACA,WAAKJ,MAAL,GAAcD,KAAK,CAACC,MAApB;AACA,WAAKK,KAAL,GAAaN,KAAK,CAACM,KAAnB;AACH;;;AA5CD;AACA;AACA;wBACuB;AACnB,aAAOC,MAAM,CAACC,MAAP,CAAc;AACjBL,QAAAA,SAAS,EAAE;AAAEM,UAAAA,IAAI,EAAEC,mBAAUC,KAAV,CAAgBC;AAAxB,SADM;AAEjBR,QAAAA,MAAM,EAAE;AAAEK,UAAAA,IAAI,EAAEC,mBAAUC,KAAV,CAAgBC;AAAxB,SAFS;AAGjBP,QAAAA,QAAQ,EAAE;AAAEI,UAAAA,IAAI,EAAEC,mBAAUC,KAAV,CAAgBC;AAAxB,SAHO;AAIjBN,QAAAA,KAAK,EAAE;AAAEG,UAAAA,IAAI,EAAEC,mBAAUC,KAAV,CAAgBC;AAAxB,SAJU;AAKjBX,QAAAA,MAAM,EAAE;AAAEQ,UAAAA,IAAI,EAAEC,mBAAUC,KAAV,CAAgBC;AAAxB;AALS,OAAd,oDAAP;AAOH;;;wBAEoB;AACjB,aAAO,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,KAA1B,EAAiC,KAAjC,CAAP;AACH;;;;EAjBgCC,sB","sourcesContent":["import { BaseTypes, DynamicObject, Renderer } from 'lance-gg';\n\nexport default class Fighter extends DynamicObject {\n\n    // direction is 1 or -1\n    // action is one of: idle, jump, fight, run, die\n    // progress is used for the animation\n    static get netScheme() {\n        return Object.assign({\n            direction: { type: BaseTypes.TYPES.INT8 },\n            action: { type: BaseTypes.TYPES.INT8 },\n            progress: { type: BaseTypes.TYPES.INT8 },\n            kills: { type: BaseTypes.TYPES.INT8 },\n            isDino: { type: BaseTypes.TYPES.INT8 }\n        }, super.netScheme);\n    }\n\n    static get ACTIONS() {\n        return ['IDLE', 'JUMP', 'FIGHT', 'RUN', 'DIE'];\n    }\n\n    onAddToWorld(gameEngine) {\n        if (Renderer)\n            Renderer.getInstance().addFighter(this);\n    }\n\n    onRemoveFromWorld(gameEngine) {\n        if (Renderer)\n            Renderer.getInstance().removeFighter(this);\n    }\n\n    // two dino's don't collide\n    collidesWith(other) {\n        return !(this.isDino && other.isDino);\n    }\n\n    toString() {\n        const fighterType = this.isDino?'Dino':'Fighter';\n        return `${fighterType}::${super.toString()} direction=${this.direction} action=${this.action} progress=${this.progress}`;\n    }\n\n    syncTo(other) {\n        super.syncTo(other);\n        this.direction = other.direction;\n        this.action = other.action;\n        this.progress = other.progress;\n        this.isDino = other.isDino;\n        this.kills = other.kills;\n    }\n}\n"],"file":"Fighter.js"}