{"version":3,"sources":["../../src/client/BrawlerRenderer.js"],"names":["PIXI","require","game","BrawlerRenderer","gameEngine","clientEngine","sprites","fighterSpriteScale","pixelsPerSpaceUnit","window","innerWidth","spaceWidth","innerHeight","spaceHeight","viewportWidth","viewportHeight","setDimensions","stage","Container","document","readyState","onDOMLoaded","addEventListener","bind","Promise","resolve","reject","loader","add","Object","keys","ASSETPATHS","map","x","name","url","load","isReady","setupStage","textures","IDLE","values","resources","idleSheet","JUMP","jumpSheet","FIGHT","meleeSheet","RUN","runSheet","DIE","dieSheet","DINO_IDLE","dinoIdleSheet","DINO_WALK","dinoWalkSheet","DINO_RUN","dinoRunSheet","DINO_JUMP","dinoJumpSheet","DINO_DIE","dinoDieSheet","isTouchDevice","body","classList","isMacintosh","isWindows","emit","renderer","resize","backgroundSprite","Sprite","background","texture","width","height","addChild","autoDetectRenderer","querySelector","appendChild","view","obj","y","left","groundLeft","middle","groundMiddle","right","groundRight","platformLeft","platformMiddle","platformRight","platformTextures","edgeWidth","platformUnit","middleWidth","sprite","leftEdge","rightEdge","extras","TilingSprite","middleHeight","scale","set","tileScale","id","position","fighterSprite","AnimatedSprite","anchor","destroy","t","dt","world","forEachObject","spriteOffsetY","Fighter","isDino","ACTIONS","action","textureCount","length","image","Math","floor","progress","gotoAndStop","direction","playerId","getElementById","innerHTML","kills","render","Renderer","navigator","platform","indexOf","maxTouchPoints"],"mappings":"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","sourcesContent":["import { Renderer } from 'lance-gg';\nimport Fighter from './../common/Fighter';\n\nlet PIXI = require('pixi.js');\nlet game = null;\n\nexport default class BrawlerRenderer extends Renderer {\n\n    constructor(gameEngine, clientEngine) {\n        super(gameEngine, clientEngine);\n        game = gameEngine;\n        this.sprites = {};\n        this.fighterSpriteScale = 1;\n    }\n\n    get ASSETPATHS() {\n        return {\n            background: 'assets/deserttileset/png/BG.png',\n            groundLeft: 'assets/deserttileset/png/Tile/1.png',\n            groundMiddle: 'assets/deserttileset/png/Tile/2.png',\n            groundRight: 'assets/deserttileset/png/Tile/3.png',\n            platformLeft: 'assets/deserttileset/png/Tile/14.png',\n            platformMiddle: 'assets/deserttileset/png/Tile/15.png',\n            platformRight: 'assets/deserttileset/png/Tile/16.png',\n            idleSheet: 'assets/adventure_girl/png/Idle.json',\n            jumpSheet: 'assets/adventure_girl/png/Jump.json',\n            meleeSheet: 'assets/adventure_girl/png/Melee.json',\n            runSheet: 'assets/adventure_girl/png/Run.json',\n            dieSheet: 'assets/adventure_girl/png/Dead.json',\n            dinoIdleSheet: 'assets/dino/png/Idle.json',\n            dinoJumpSheet: 'assets/dino/png/Jump.json',\n            dinoWalkSheet: 'assets/dino/png/Walk.json',\n            dinoRunSheet: 'assets/dino/png/Run.json',\n            dinoDieSheet: 'assets/dino/png/Dead.json'\n        };\n    }\n\n    // expand viewport to maximize width or height\n    setDimensions() {\n        this.pixelsPerSpaceUnit = window.innerWidth / this.gameEngine.spaceWidth;\n        if (window.innerHeight < game.spaceHeight * this.pixelsPerSpaceUnit) {\n            this.pixelsPerSpaceUnit = window.innerHeight / game.spaceHeight;\n        }\n        this.viewportWidth = game.spaceWidth * this.pixelsPerSpaceUnit;\n        this.viewportHeight = game.spaceHeight * this.pixelsPerSpaceUnit;\n    }\n\n    // initialize renderer.\n    init() {\n        this.setDimensions();\n        this.stage = new PIXI.Container();\n\n        if (document.readyState === 'complete' || document.readyState === 'loaded' || document.readyState === 'interactive')\n            this.onDOMLoaded();\n        else\n            document.addEventListener('DOMContentLoaded', this.onDOMLoaded.bind(this));\n\n        return new Promise((resolve, reject) => {\n            PIXI.loader.add(Object.keys(this.ASSETPATHS).map((x) => {\n                return {\n                    name: x,\n                    url: this.ASSETPATHS[x]\n                };\n            }))\n            .load(() => {\n                this.isReady = true;\n                this.setupStage();\n\n                this.textures = {\n                    IDLE: Object.values(PIXI.loader.resources.idleSheet.textures),\n                    JUMP: Object.values(PIXI.loader.resources.jumpSheet.textures),\n                    FIGHT: Object.values(PIXI.loader.resources.meleeSheet.textures),\n                    RUN: Object.values(PIXI.loader.resources.runSheet.textures),\n                    DIE: Object.values(PIXI.loader.resources.dieSheet.textures),\n                    DINO_IDLE: Object.values(PIXI.loader.resources.dinoIdleSheet.textures),\n                    DINO_WALK: Object.values(PIXI.loader.resources.dinoWalkSheet.textures),\n                    DINO_RUN: Object.values(PIXI.loader.resources.dinoRunSheet.textures),\n                    DINO_JUMP: Object.values(PIXI.loader.resources.dinoJumpSheet.textures),\n                    DINO_DIE: Object.values(PIXI.loader.resources.dinoDieSheet.textures)\n                };\n\n                if (isTouchDevice()) document.body.classList.add('touch');\n                else if (isMacintosh()) document.body.classList.add('mac');\n                else if (isWindows()) document.body.classList.add('pc');\n\n                resolve();\n                this.gameEngine.emit('renderer.ready');\n            });\n        });\n\n    }\n\n    // add background sprite\n    setupStage() {\n        window.addEventListener('resize', () => {\n            this.setDimensions();\n            this.renderer.resize(this.viewportWidth, this.viewportHeight);\n        });\n        this.stage.backgroundSprite = new PIXI.Sprite(PIXI.loader.resources.background.texture);\n        this.stage.backgroundSprite.width = this.viewportWidth;\n        this.stage.backgroundSprite.height = this.viewportHeight;\n        this.stage.addChild(this.stage.backgroundSprite);\n    }\n\n    onDOMLoaded() {\n        this.renderer = PIXI.autoDetectRenderer(this.viewportWidth, this.viewportHeight);\n        document.body.querySelector('.pixiContainer').appendChild(this.renderer.view);\n    }\n\n    platformTextures(obj) {\n        if (obj.y === 0) {\n            return {\n                left: PIXI.loader.resources.groundLeft.texture,\n                middle: PIXI.loader.resources.groundMiddle.texture,\n                right: PIXI.loader.resources.groundRight.texture\n            };\n        }\n        return {\n            left: PIXI.loader.resources.platformLeft.texture,\n            middle: PIXI.loader.resources.platformMiddle.texture,\n            right: PIXI.loader.resources.platformRight.texture\n        };\n    }\n\n    // add a single platform game object\n    addPlatform(obj) {\n\n        // create sprites for platform edges, and middle-section\n        let textures = this.platformTextures(obj);\n        let edgeWidth = game.platformUnit;\n        let middleWidth = obj.width - (2 * edgeWidth);\n        let sprite = new PIXI.Container();\n        let leftEdge = new PIXI.Sprite(textures.left);\n        let rightEdge = new PIXI.Sprite(textures.right);\n        let middle = new PIXI.extras.TilingSprite(textures.middle);\n        let middleHeight = edgeWidth / middle.texture.width * middle.texture.height;\n\n        // scale the sprites and tile, set the middle-section width\n        let scale = edgeWidth * this.pixelsPerSpaceUnit / leftEdge.width;\n        leftEdge.scale.set(scale, scale);\n        rightEdge.scale.set(scale, scale);\n        middle.tileScale.set(scale, scale);\n        middle.width = middleWidth * this.pixelsPerSpaceUnit;\n        middle.height = middleHeight * this.pixelsPerSpaceUnit;\n\n        // position the sprites inside container\n        middle.x = edgeWidth * this.pixelsPerSpaceUnit;\n        rightEdge.x = middle.x + middleWidth * this.pixelsPerSpaceUnit;\n        sprite.addChild(leftEdge);\n        sprite.addChild(middle);\n        sprite.addChild(rightEdge);\n        this.sprites[obj.id] = sprite;\n        sprite.position.set(obj.position.x, obj.position.y);\n        this.stage.addChild(sprite);\n    }\n\n    // add a single fighter game object\n    addFighter(obj) {\n        let sprite = new PIXI.Container();\n        sprite.fighterSprite = new PIXI.extras.AnimatedSprite(this.textures.IDLE);\n        this.fighterSpriteScale = obj.height * this.pixelsPerSpaceUnit / sprite.fighterSprite.height;\n        sprite.fighterSprite.scale.set(this.fighterSpriteScale, this.fighterSpriteScale);\n        sprite.fighterSprite.anchor.set(0.2, 0.0);\n        sprite.addChild(sprite.fighterSprite);\n        this.sprites[obj.id] = sprite;\n        sprite.position.set(obj.position.x, obj.position.y);\n        this.stage.addChild(sprite);\n    }\n\n    // remove a fighter\n    removeFighter(obj) {\n        let sprite = this.sprites[obj.id];\n        if (sprite) {\n            if (sprite.fighterSprite) sprite.fighterSprite.destroy();\n            sprite.destroy();\n        }\n    }\n\n    // draw all game objects\n    draw(t, dt) {\n        super.draw(t, dt);\n\n        if (!this.isReady) return; // assets might not have been loaded yet\n\n        game.world.forEachObject((id, obj) => {\n            let sprite = this.sprites[obj.id];\n            let spriteOffsetY = 0;\n            if (obj instanceof Fighter) {\n                if (obj.isDino) {\n                    sprite.fighterSprite.textures = this.textures['DINO_' + Fighter.ACTIONS[obj.action]];\n                    spriteOffsetY = -3;\n                } else {\n                    sprite.fighterSprite.textures = this.textures[Fighter.ACTIONS[obj.action]];\n                    spriteOffsetY = -1;\n                }\n                let textureCount = sprite.fighterSprite.textures.length;\n                let image = Math.floor((100 - obj.progress)/100 * textureCount);\n                sprite.fighterSprite.gotoAndStop(image);\n\n                sprite.fighterSprite.scale.set(obj.direction * this.fighterSpriteScale, this.fighterSpriteScale);\n                sprite.fighterSprite.anchor.x = obj.direction==1?0.2:0.8;\n\n                if (obj.playerId === this.gameEngine.playerId)\n                    document.getElementById('killsStatus').innerHTML = `kills: ${obj.kills}`;\n            }\n            sprite.x = obj.position.x * this.pixelsPerSpaceUnit;\n            sprite.y = this.viewportHeight - (obj.position.y + obj.height + spriteOffsetY) * this.pixelsPerSpaceUnit;\n        });\n\n        this.renderer.render(this.stage);\n    }\n}\n\nfunction isMacintosh() { return navigator.platform.indexOf('Mac') > -1; }\nfunction isWindows() { return navigator.platform.indexOf('Win') > -1; }\nfunction isTouchDevice() { return 'ontouchstart' in window || navigator.maxTouchPoints; }\n"],"file":"BrawlerRenderer.js"}